   List<MOBO> filteredMotherboard = motherboards.findBySearch(searchWord);

        // This approach uses Java Streams to filter the results based on the provided parameters. It ensures that only one query is sent to the database, and all further filtering is done in memory.
        filteredMotherboard = filteredMotherboard.stream()
                .filter(mobo -> (filterManufacturer == null || filterManufacturer.isEmpty() | mobo.getManufacturer().equalsIgnoreCase(filterManufacturer)))
                .filter(mobo -> (filterSocket == null || filterSocket.isEmpty() || mobo.getSocketType().equalsIgnoreCase(filterSocket)))
                .filter(mobo -> (filterChipset == null || filterChipset.isEmpty() || mobo.getChipset().equalsIgnoreCase(filterChipset)))
                .filter(mobo -> (filterMemory == null || filterMemory.isEmpty() || mobo.getMemoryType().equalsIgnoreCase(filterMemory)))
                .filter(mobo -> (filterMoboFormFactor == null || filterMoboFormFactor.isEmpty() || mobo.getMoboFormFactor().equalsIgnoreCase(filterMoboFormFactor)))
                .filter(mobo -> (filterMinPrice == null || mobo.getPrice() >= filterMinPrice))
                .filter(mobo -> (filterMaxPrice == null || mobo.getPrice() <= filterMaxPrice)) .collect(Collectors.toList());


    @Query("SELECT m FROM MOBO m WHERE " +
            "(:searchWord IS NULL OR m.name ILIKE CONCAT('%', :searchWord, '%') OR m.manufacturer ILIKE CONCAT('%', :searchWord, '%') OR m.chipset ILIKE CONCAT('%', :searchWord, '%') OR m.memoryType ILIKE CONCAT('%', :searchWord, '%') OR m.moboFormFactor ILIKE CONCAT('%', :searchWord, '%') OR m.interfaceType ILIKE CONCAT('%', :searchWord, '%')) AND " +
            "(:filterManufacturer IS NULL OR :filterManufacturer = m.manufacturer) AND " +
            "(:filterSocket IS NULL OR :filterSocket = m.socketType) AND " +
            "(:filterChipset IS NULL OR :filterChipset = m.chipset) AND " +
            "(:filterMemory IS NULL OR :filterMemory = m.memoryType) AND " +
            "(:filterMoboFormFactor IS NULL OR :filterMoboFormFactor = m.moboFormFactor) AND " +
            "(:filterMinPrice IS NULL OR m.price >= :filterMinPrice) AND " +
            "(:filterMaxPrice IS NULL OR m.price <= :filterMaxPrice)")
    List<MOBO> findByAllFilters(
            @Param("searchWord") String searchWord,
            @Param("filterManufacturer") String filterManufacturer,
            @Param("filterSocket") String filterSocket,
            @Param("filterChipset") String filterChipset,
            @Param("filterMemory") String filterMemory,
            @Param("filterMoboFormFactor") String filterMoboFormFactor,
            @Param("filterMinPrice") Double filterMinPrice,
            @Param("filterMaxPrice") Double filterMaxPrice);

